<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <!-- 어노테이션 기반으로 컴포넌트를 등록할 수 있게 된다 ( @Controller, @Service ) -->
   <annotation-driven />

   <!-- GET으로 요청된 정적인 자원에 대한 매핑 -->
   <!-- mapping URL에 대한 응답 자원의 location -->
   <resources mapping="/resources/**" location="/resources/" />  
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/img/**" location="/resources/img"/>
	<resources mapping="/css/**" location="/resources/css"/>
	<resources mapping="/js/**" location="/resources/js"/>

	<!-- jsp기반의 viewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" /> <!-- 우선순위 -->	
	</beans:bean>
	
		<!-- 자바 스프링 빈 기반의 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" >
		<beans:property name="order" value="0" /> <!-- 우선 순위 -->
	</beans:bean>
	
	<!-- JSON응답을 위한 jsonView 스프링 빈 등록 -->
	<beans:bean id="jsonView"
	 class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8" />
	</beans:bean>
	
	<!--  MultipartResolver  -->
 	<!--  파일업로드 처리 클래스  -->
 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxInMemorySize" value="1048576"/><!--  1MB  -->
		<beans:property name="maxUploadSize" value="10485760"/><!--  10MB  -->
	</beans:bean>	
	
	<!-- 컴포넌트를 스캔(검색 후 등록)할 패키지를 지정한다. -->
	<!-- 여러 패키지를 등록할 때에는 ,로 구분한다. -->
	<context:component-scan base-package="com.hansol.www, web, board.controller, board.service, member.controller, member.service" />
	
	
	
</beans:beans>